{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/ErrTrad.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/ui.js","actions/auth.js","components/auth/LoadingScreen.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","ErrTrad","code","loadNotes","a","collection","orderBy","get","notesSnap","forEach","snapHijo","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","deleteNote","setError","err","startLoading","finishLoading","login","logout","LoadingScreen","className","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","date","Date","getTime","moment","updateLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","todayDate","useDispatch","useSelector","format","style","display","onChange","e","files","title","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startDeleting","NothingSelected","JournalEntry","noteDate","backgroundSize","backgroundImage","backgroundColor","JournalEntries","Sidebar","signOut","newNote","add","JournalScreen","classList","remove","toggle","LoginScreen","email","password","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","startLoginEmailPassword","autoComplete","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","location","search","undefined","localStorage","setItem","pathname","props","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2afc5ec2.chunk.js","sourcesContent":["export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState ={\r\n    notes: [],\r\n    active:null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n   \r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id ===action.payload.id \r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note=>note.id !== action.payload) \r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n/**\r\n * {\r\n *      uid: 'dagarcia100@gmail.com'\r\n *      name: 'David\r\n * }\r\n */\r\n\r\nexport const authReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\napiKey: \"AIzaSyDj8xrvyOfXjn9qFJYre1Sz4DDEnvwzcQU\",\r\nauthDomain: \"react-apps-bafe2.firebaseapp.com\",\r\nprojectId: \"react-apps-bafe2\",\r\nstorageBucket: \"react-apps-bafe2.appspot.com\",\r\nmessagingSenderId: \"650936320724\",\r\nappId: \"1:650936320724:web:e1b821cca70cead587f141\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const ErrTrad = (code) =>{\r\n    switch (code) {\r\n        case 'auth/user-not-found':\r\n            return 'No se encontraron usuarios con el correo indicado.';\r\n        case 'auth/wrong-password':\r\n            return 'La contraseña es incorrecta.'\r\n        case 'auth/email-already-in-use':\r\n            return 'El usuario ya está en uso'\r\n        default:\r\n        return 'Intenta de nuevo';\r\n    }\r\n};","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\nexport const loadNotes = async(uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).orderBy('date','desc').get();\r\n    const notes = [];\r\n    notesSnap.forEach(snapHijo =>{\r\n        notes.push({\r\n            id:snapHijo.id,\r\n            ...snapHijo.data()\r\n        }) \r\n    })\r\n    return notes;\r\n}","export const fileUpload = async(file) =>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/deydrums/upload';\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n    try {\r\n        const resp = await fetch  (cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        if(resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        dispatch(activeNote(doc.id,newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n};\r\n\r\nexport const activeNote =(id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id, ...note\r\n    }\r\n})\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n};\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async(dispatch, getState) =>{\r\n        const {uid} = getState().auth;\r\n        if( !note.url){\r\n            delete note.url;\r\n        }\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Guardado','La nota se ha guardado correctamente.', 'success');\r\n\r\n    }\r\n};\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const {active: activeNote} = getState().notes;\r\n        Swal.fire({ \r\n            title: 'Cargando...',\r\n            text: 'Espere mientras se carga el archivo,',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        const fileUrl = await fileUpload(file[0]);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n    }\r\n};\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) =>{\r\n        const {uid} = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        dispatch(deleteNote(id));\r\n    }\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading  = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading   = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\nimport {firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { ErrTrad } from '../helpers/ErrTrad';\r\nimport { types } from \"../types/types\";\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email,password) =>{\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                dispatch(login(user.uid,user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Ha ocurrido un error',ErrTrad(e.code), 'error');\r\n            });\r\n    }\r\n};\r\n\r\nexport const startRegisterEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async({user}) =>{\r\n                await user.updateProfile({displayName: name});\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n            .catch(e => {\r\n                dispatch(finishLoading());\r\n                Swal.fire('Ha ocurrido un error',ErrTrad(e.code), 'error');\r\n            });\r\n    }\r\n    \r\n};\r\n\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) => {\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) =>{\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(e => {\r\n                Swal.fire('Ha ocurrido un error',ErrTrad(e.code), 'error');\r\n                dispatch(finishLoading())\r\n            });;\r\n    }\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n};\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"auth__main\">\r\n                <div className=\"auth__loading\">\r\n                <div className=\"page-loader\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = ( newFormState = initialState) =>{\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\nimport moment from 'moment';\r\n\r\nexport const NotesAppBar = () => {\r\n    const date = new Date().getTime();\r\n    moment.updateLocale('es', {\r\n        months: 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),\r\n        monthsShort: 'Enero._Feb._Mar_Abr._May_Jun_Jul._Ago_Sept._Oct._Nov._Dec.'.split('_'),\r\n        weekdays: 'Domingo_Lunes_Martes_Miercoles_Jueves_Viernes_Sabado'.split('_'),\r\n        weekdaysShort: 'Dom._Lun._Mar._Mier._Jue._Vier._Sab.'.split('_'),\r\n        weekdaysMin: 'Do_Lu_Ma_Mi_Ju_Vi_Sa'.split('_')\r\n      })\r\n    const todayDate = moment(date);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureUpload = () =>{\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files;\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{todayDate.format('dddd, Do MMMM yy')}</span>\r\n            <input\r\n                type=\"file\"\r\n                style = {{display:'none'}}\r\n                onChange={handleFileChange}\r\n                id = \"fileSelector\"\r\n                name = \"file\"\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick = {handlePictureUpload}>\r\n                    Fotografía\r\n                </button>\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                    Guardar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active: note} = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const activeId = useRef(note.id);\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id,{...formValues}));\r\n    }, [formValues])\r\n\r\n    const {body,title, id} =formValues;\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n    return (\r\n        <div className = \"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className = \"notes__content\">\r\n                    <input\r\n                        type = \"text\"\r\n                        placeholder = \"Título...\"\r\n                        name = 'title'\r\n                        className = \"notes__title-input\"\r\n                        value ={title}\r\n                        onChange={handleInputChange}\r\n                        \r\n                    />\r\n                    <textarea\r\n                        placeholder = \"Que paso hoy?\"\r\n                        className = \"notes__textarea\"\r\n                        name = 'body'\r\n                        value ={body}\r\n                        onChange={handleInputChange}\r\n                    >\r\n\r\n                    </textarea>\r\n\r\n                    {  \r\n                        (note.url) &&\r\n                        <div className = \"notes__image\">\r\n                            <img \r\n                                src = {note.url}\r\n                                alt = \"image\"\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n            </div>\r\n            <button className = \"btn btn-danger\" onClick={handleDelete}>\r\n                    Borrar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className =\"nothing__main-content\">\r\n            <p>\r\n                Selecciona una entrada\r\n                <br/>\r\n                o crea una nueva\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    const dispatch = useDispatch(); \r\n    moment.updateLocale('es', {\r\n        months: 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),\r\n        monthsShort: 'Enero._Feb._Mar_Abr._May_Jun_Jul._Ago_Sept._Oct._Nov._Dec.'.split('_'),\r\n        weekdays: 'Domingo_Lunes_Martes_Miercoles_Jueves_Viernes_Sabado'.split('_'),\r\n        weekdaysShort: 'Dom._Lun._Mar._Mier._Jue._Vier._Sab.'.split('_'),\r\n        weekdaysMin: 'Do_Lu_Ma_Mi_Ju_Vi_Sa'.split('_')\r\n      })\r\n    const noteDate = moment(date);\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id,{\r\n            date,title,body,url\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn\" onClick={handleEntryClick}>\r\n            {\r\n                url ?\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style = {{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                >\r\n                </div>\r\n                :\r\n                <div \r\n                className=\"journal__entry-picture\"\r\n                style = {{\r\n                    backgroundSize: 'cover',\r\n                    backgroundColor: 'rgba(102, 250, 193, 0.699)'\r\n                }}\r\n                >\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n                <span>{noteDate.format('MMM')}{noteDate.format('y')}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    const {notes} = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { JournalEntries } from './JournalEntries';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state =>state.auth);\r\n\r\n\r\n    const handleLogout = () => {\r\n       dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddEntry = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n    return (\r\n        <nav className = \"journal__sidebar\">\r\n            <div className=\"journal__sidebar-btnlogout\">\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick = {handleLogout}\r\n                >\r\n                    Cerrar sesión\r\n                </button>\r\n            </div>\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <i className=\"fa fa-moon\"></i>\r\n                <h3>\r\n                    <span> {name}</span>\r\n                </h3>\r\n            </div>\r\n            <div className=\"journal__new-entry\" onClick={handleAddEntry}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className = \"mt-5\">Nueva entrada</p>\r\n            </div>\r\n            <JournalEntries/>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    const btnmoreClick = () => { \r\n        const q = document.querySelector('.journal__sidebar');\r\n        q.classList.toggle('journal__active');\r\n    }\r\n    const btnmoreOutClick = () => { \r\n        const q = document.querySelector('.journal__sidebar');\r\n        q.classList.remove('journal__active');\r\n    }\r\n    \r\n    return (\r\n        <div className = \"journal__main-content animate__animated animate__fadeIn\" >\r\n            <Sidebar/>\r\n            <main onClick = {btnmoreOutClick}>\r\n                {/* <NothingSelected/> */}\r\n                {\r\n                    (active)\r\n                        ? (<NoteScreen/>)\r\n                        : (<NothingSelected/>)\r\n                }\r\n                \r\n            </main>\r\n            <a \r\n                className = \"journal__btnmore\"\r\n                onClick={btnmoreClick}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-2x\"></i>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state =>state.ui);\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email,password));\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Iniciar sesión</h3>\r\n            <form onSubmit={handleLogin}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email...\"\r\n                    name = \"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleInputChange}\r\n                    value = {email}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password...\"\r\n                    name = \"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value = {password}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className = \"btn btn-primary btn-block\"\r\n                    disabled = {loading}\r\n                >\r\n                    Entrar\r\n                </button>\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Iniciar con redes sociales</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Entrar con Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Registrarse aquí\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport validator from 'validator';\r\nimport { startRegisterEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state =>state.ui);\r\n\r\n    const [formValues, handleInputChange, reset] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()){\r\n            dispatch(startRegisterEmailPasswordName(email,password,name));\r\n        }\r\n    };\r\n\r\n    const isFormValid = () =>{\r\n        if(name.trim().length ===0){\r\n            dispatch(setError('Nombre es requerido'));\r\n            return false;\r\n        }else if(!validator.isEmail(email)){\r\n            dispatch(setError('Email invalido'));\r\n            return false;\r\n        }else if (password !== password2 || password.length < 5){\r\n            dispatch(setError('Contraseñas no coinciden (deben ser mayor a 4 caracteres)'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Registrarse</h3>\r\n            {            \r\n                msgError &&\r\n                <div className=\"auth__alert-error\"> \r\n                    {msgError}\r\n                </div>\r\n            }            \r\n            <form onSubmit = {handleRegister}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre...\"\r\n                    name = \"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange = {handleInputChange}\r\n                    value = {name}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email...\"\r\n                    name = \"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    onChange = {handleInputChange}\r\n                    value = {email}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Contraseña...\"\r\n                    name = \"password\"\r\n                    className=\"auth__input\"\r\n                    onChange = {handleInputChange}\r\n                    value = {password}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirmar contraseña...\"\r\n                    name = \"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange = {handleInputChange}\r\n                    value = {password2}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className = \"btn btn-primary btn-block mb-3\"\r\n                >\r\n                    Registrarse\r\n                </button>\r\n              \r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Logueate aquí\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main \">\r\n            <div className=\"auth__box-container animate__animated animate__fadeIn\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component ={LoginScreen}/>\r\n                    <Route exact path=\"/auth/register\" component ={RegisterScreen}/>\r\n                    <Redirect to = \"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n    if(rest.location.search != '' && rest.location.search != undefined){\r\n        localStorage.setItem('lastPath',rest.location.pathname + rest.location.search);\r\n    }else{\r\n        localStorage.setItem('lastPath',rest.location.pathname);\r\n    }\r\n    return (\r\n        <Route {...rest}\r\n            component = { (props)=>(\r\n                (isAuthenticated)\r\n                    ? <Component {...props}/>\r\n                    : <Redirect to=\"/auth/login\"/>\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.protoTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component = { (props)=>(\r\n                (isAuthenticated)\r\n                    ? <Redirect to=\"/\"/>\r\n                    : <Component {...props}/>\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.protoTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import firebase from 'firebase';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\nimport { LoadingScreen } from '../components/auth/LoadingScreen';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const [cheking, setCheking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n                dispatch(startLoadingNotes(user.uid));\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            };\r\n            setCheking(false);\r\n        });\r\n        \r\n    }, [dispatch, setCheking, setIsLoggedIn]);\r\n\r\n    if(cheking){\r\n        return (\r\n            <LoadingScreen></LoadingScreen>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute\r\n                    path=\"/auth\" \r\n                    isAuthenticated = {isLoggedIn}\r\n                    component ={AuthRouter}\r\n                />\r\n                <PrivateRoute \r\n                    exact \r\n                    isAuthenticated = {isLoggedIn}\r\n                    path=\"/\" \r\n                    component ={JournalScreen}\r\n                />\r\n                <Redirect to = \"/auth/login\"/>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}